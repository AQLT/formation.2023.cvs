{
  "hash": "6fef4151780bf1be25b825a3b55cd093",
  "result": {
    "markdown": "---\ntitle: \"Installer (R)JDemetra+ et le JWSACruncher\"\n---\n\n\n\n# Installation de JDemetra+\n\nPour utiliser JDemetra+ il faut deux logiciels : JDemetra+ et Java.\n\n## Installation de JDemetra+\n\nJDemetra+ est téléchargeable depuis le lien github de l'application : <https://github.com/jdemetra/jdemetra-app/releases> (et la version 3 est disponible <https://github.com/jdemetra/jdplus-main/releases>).\nDeux solutions pour l'installer : télécharger le fichier .exe qui nécessite des droits d'administrateur ou télécharger le .zip qui permet d'avoir une version portable du logiciel.   \n**Attention :** pour la seconde option ne pas télécharger le fichier `Source code (zip)` mais le fichier `jdemetra+-2.2.2-bin.zip` (pour la version 2.2.2) :  \n![JDemetra+ téléchargement](img/jdemetra.PNG)\n\nUne fois le fichier téléchargé, il suffit de le dézipper : le logiciel se trouve alors dans le dossier `\\nbdemetra\\bin\\`, ce sont les fichiers `nbdemetra.exe` (version 32-bit) et `nbdemetra64.exe` (version 64-bit).\n\n\n## Utilisation d'une version portable de Java {#jPort}\n\nPour utiliser la version 2.2.4 de JDemetra+ (et les packages R associés) il faut avoir la version 8 de Java (ou une version supérieure). \nPour la version 3.0 de JDemetra+ (et les packages R associés) il faut avoir la version 17 de Java (ou une version supérieure) : nous utiliserons donc la version 17 de Java pour s'assurer une compatibilité avec tous les logiciels\nSi l'on a pas cette version d'installée et que l'on n'a pas les droits d'administrateur pour installer Java il faut alors installer une version portable de Java et lancer JDemetra+ avec cette version de java.\n\nPour installer une version portable de java, vous pouvez aller ici :\n\n- [Zulu JDK](https://www.azul.com/downloads/#zulu)\n\n- [AdoptOpenJDK](https://adoptopenjdk.net/)\n\n- [Amazon Corretto](https://aws.amazon.com/corretto/)\n\n- [Oracle](https://jdk.java.net/java-se-ri/17)  \n\nPour lancer JDemetra+ avec cette nouvelle version de Java il faut :\n\n- créer un raccourci vers l'application  \n![Créer raccourci](img/raccourci.png)  \n\n- faire un clique-droit sur le raccourci et ensuite cliquer sur « Propriétés ». Il reste alors à modifier la variable « Cible » en ajoutant le paramètre suivant : `--jdkhome \"[chemin du dossier Java17]\"`.  \n![Modifier cible raccourci](img/modif_cible.png)   \n    Par exemple, si JDemetra+ et Java sont installés sous `D:\\Programmes\\`, la variable Cible contiendra l'adresse   `D:\\Programmes\\nbdemetra\\bin\\nbdemetra64.exe --jdkhome \"D:\\Programmes\\Java17\"`.  \n    **Attention :** le chemin du raccourci est absolu, il doit donc être modifié à chaque fois qu'un des répertoires racines de JDemetra+ ou Java est déplacé.\n\n# Installation du JWSACruncher\n\nLe cruncher (JWSACruncher) est un outil qui permet de mettre à jour un workspace de JDemetra+ à partir de la console, sans devoir ouvrir JDemetra+. \nLa mise à jour d'un workspace peut alors se faire à partir d'un autre logiciel statistique (R ou SAS par exemple).\nLa version 2.2.4 du cruncher peut être téléchargée ici https://github.com/jdemetra/jwsacruncher/releases (fichier `jwsacruncher-x.y.z-bin.zip`) et les anciennes versions sont téléchargeables sous https://github.com/jdemetra/jdemetra-core/releases.\n\nSi l'on utilise une version portable de Java (voir [section précédente](#jPort)) il faut encore modifier certains paramètres pour utiliser le cruncher :  \n\n- dézipper le fichier téléchargé ;  \n- dans le dossier dézippé, ouvrir (par exemple avec Notepad++) le fichier `jwsacruncher.bat` présent dans le sous-dossier `\\bin\\` (c'est-à-dire sous `jdemetra-cli-2.2.4\\bin\\` dans la version 2.2.4 du cruncher) ;  \n- modifier la valeur de la variable `JAVACMD` de la ligne 71 (actuelle `JAVACMD=java`) par l'adresse  vers le fichier `java.exe` de la version portable . Ainsi, si Java est installé sous `D:\\Programmes\\`, la nouvelle ligne est `if \"%JAVACMD%\"==\"\" set` `JAVACMD=\"D:\\Programmes\\Java17\\bin\\java\"`.\n\nLe téléchargement et la configuration du cruncher peut également se faire via rjwsacruncher:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(rjwsacruncher)\ndownload_cruncher() # Pour télécharger le cruncher\nconfigure_jwsacruncher() # Pour le configurer avec une version portable\n```\n:::\n\n\n# Téléchargement de JDemetra+ 3.x.y\n\nLes version 3.0.0 et plus de JDemetra+ et du JWSACruncher sont disponibles ici : <https://github.com/jdemetra/jdplus-main/releases>.\nElles embarquent désormais une version portable de Java 17 et il n'est plus nécessaire de faire les configurations précédentes.\nLes nouvelles versions peuvent être utilisées sur des workspaces créés avec une version 2.x.y mais l'inverse n'est pas possible.\n\n# Configuration des packages R avec Java\n\nPour savoir quelle version de Java est utilisée par R, on peut utiliser le code suivant :\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(rJava)\n.jinit()\n.jcall(\"java/lang/System\", \"S\", \"getProperty\", \"java.runtime.version\")\n```\n:::\n\n\n\nPour configurer R avec une version portable de Java, trois solutions :\n\n1. Avant **tout chargement de package nécessitant Java (`rJava`...)** (si vous avez lancé le code précédent, relancez donc R) :\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nSys.setenv(JAVA_HOME='D:/Programmes/jdk-17')\n```\n:::\n\n\n2. Pour éviter de faire cette manipulation à chaque fois que l'on relance R, deux solutions :  \n\n    a. modifier le `JAVA_HOME` dans les variables d'environnement de Windows (voir <https://confluence.atlassian.com/doc/setting-the-java_home-variable-in-windows-8895.html>).\n    \n    b. modifier le `.Renviron` : depuis R lancer le code `file.edit(\"~/.Renviron\")`{.r}, ajouter dans le fichier le chemin vers la version portable de Java comme précédemment (`JAVA_HOME='D:/Programmes/jdk-17'`), sauvegarder et relancer R.\n\nVous pouvez maintenant installer tous les packages nécessaires.\nPour ceux qui ne sont pas sur le CRAN, il faut les installer directement depuis github :\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nremotes::install_github(\"rjdemetra/rjd3toolkit\")\n```\n:::\n\n\nSi vous utilisez un ordinateur professionnel, pensez à configurer le proxy pour que ces commandes puissent fonctionner (voir <https://www.book.utilitr.org/01_r_insee/fiche-personnaliser-r#le-fichier-.renviron>).\nPour cela vous pouvez utiliser `curl::ie_get_proxy_for_url()` pour récupérer l'adresse du proxy et ajouter deux variable `http_proxy` et `https_proxy` dans les variables d'environnement.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}