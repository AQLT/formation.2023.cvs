{
  "hash": "733926d37ae7972adbded57464d70733",
  "result": {
    "markdown": "---\ntitle: \"10 - Désaisonnalisation des séries haute-fréquence\"\n---\n\n\n\n\n\n\n# Régresseurs externes et TBATS\n\n## Régresseurs externes classiques\n\nDans certaines méthodes (régression linéaire, ARIMA, etc. mais pas ETS) permettent de rajouter des régresseurs externes qui peuvent aider à l'analyse/prévision\n\n- polynômes sur les dates (e.g. tendance linéaire) (on peut s'aider de `forecast::tslm()`)\n\n. . .\n\n- indicatrices sur la périodicité (avec variable de contraste) :\n\n\t- Sur les jours de la semaine\n\t\n\t- Sur les mois/trimestres\n\n\n\n### Régresseurs de Fourier\n\nLorsque la périodicité est trop élevée ou lorsqu'il y plusieurs saisonnalités, ajouter des indicatrices peut être trop coûteux.\n\nSolution : ajouter des variables sinusoïdales aux fréquences étudiées !\n\n$$\n\\cos\\left(\\frac{2 k \\pi}{m}\\right)\\quad\n\\sin\\left(\\frac{2 k \\pi}{m}\\right)\n\\quad\n\\text{ avec }0<k<m\n$$\n\nGénéralement $k\\ll m$ lorsque $m$ est grand\n\n. . .\n\n- Pour séries mensuelles : $m=12$\n\n- Pour les séries hebdomadaires $m=365.25/7\\simeq 52$\n\n- Pour les séries journalières $m=365.25$ pour saisonnalité annuelle, $m=365.25/12\\simeq 30$ pour saisonnalité mensuelle.\n\n### TBATS (1)\n\nUne transformation de Box-Cox est utilisée :\n$$\ny_t^{(\\lambda)}=\\begin{cases}\n\\frac{y_t^\\lambda - 1}{\\lambda}&\\text{if }\\lambda\\ne0\\\\\n\\log(y_t)&\\text{if }\\lambda=0\n\\end{cases}\n$$\nEnsuite un modèle avec *Trigonometric seasonality, ARMA errors, Trend and Seasonal components* (modèles exponentiels).\n\nVoir `?forecast::tbats()`.\n\nPour des séries HF, le temps de calcul peut être long.\n\n\n### TBATS (2)\n\n$$\n\\begin{cases}\ny_t^{(\\lambda)}=l_{t-1}+\\phi b_{t-1}+\\sum_{i=1}^T s_{t-m_i}^{(i)}+ d_t \\text{ and }d_t\\sim ARMA(p,q)\\\\\nl_{t}=l_{t-1}+\\phi b_{t-1}+\\alpha d_t \\\\\nb_{t} = \\phi b_{t-1} + \\beta d_t\n\\end{cases}\n$$\n$$\n\\begin{cases}\ns_t^{(i)}=\\sum_{j=1}^{k_i}s_{j,t}^{(i)} \\\\\ns_{j,t}^{(i)}=s_{j,t-1}^{(i)}\\cos \\omega_j+s_{j,t-1}^{*(i)}\\sin \\omega_j +\\gamma_1^{(i)}d_t \\\\\ns_{j,t-1}^{*(i)} = s_{j,t-1}^{(i)}\\sin \\omega_j + s_{j,t-1}^{*(i)}\\cos \\omega_j\n+\\gamma_2^{(i)}d_t\n\\end{cases}\n\\text{ and }\\omega_j=\\frac{2\\pi j}{m_i}\n$$\n\nNotation : $TBATS(omega, p,q, phi, <m1,k1>,...,<mJ,kJ>)$ avec\n\n- $omega$ = paramètre de Box-Cox  \n- $(p,q)$ = ARMA(p,q)  \n- $phi$ = paramètre d'amortissement\n- $m1, ..., mJ$ les périodicités et $k1, ..., kJ$ le nombre de termes de fourrier\n\n\n### STR\n\nSTR: Seasonal-Trend decomposition using Regression\n\nRégression pénalisée en prenant en compte des saisonnalités multiples.\n\nVoir <https://doi.org/10.1287/ijds.2021.0004> et package [`stR`]( https://CRAN.R-project.org/package=stR).\n\n\n# STL et MSTL\n\n### STL\n\nLa méthode *Seasonal-Trend decomposition using LOESS* (STL) est une méthode de décomposition itérative robuste aux points atypiques.\n\nDeux boucles : intérieure (*inner*), pour mettre à jour la tendance et la saisonnalité, inclus dans une boucle extérieure (*outer*) pour calculer des poids associés aux points atypiques\n\n### Boucle intérieure\n\n1. On calcule une série sans tendance $Y-T^{(i-1)}_t$ avec $T^0_t=0.$\n\n2. Pour chaque saisonnalité (mois/trimestre, etc.) Loess appliqué pour estimer $C^{(i)}_t$ (longueur du filtre à spécifier)\n\n3. On estime la tendance de cette composante saisonnière $L^{(i)}_t$ avec différentes moyennes mobiles\n\n4. Estimation d'une composante saisonnière sans tendance : $S^{(i)}_t=C^{(i)}_t-L^{(i)}_t$\n\n5. Estimation de la tendance avec Loess sur série désaisonnalisée $Y- S^{(i)}_t$ (longueur du filtre à spécifier)\n\n### Boucle extérieure\n\n1. Calcul des résidus $R_t$\n\n2. Calcul de poids associés à chaque observation avec \n$$\n\\rho_t=B(|R_t|/h)\\text{ et }h=6med(|R_t|)\n$$\net $B$ un noyau (biweight par défaut)\n\n### MSTL\n\nMSTL est une extension de STL où l'algorithme STL est appliqué à chaque saisonnalités.\n\nVoir <https://doi.org/10.48550/arXiv.2107.13462> et `forecast::mstl()`.\n\nTrès proche de Ollech (2018), voir `dsa::dsa()`.\n\n# Extension des moyennes mobiles\n\n### Saisonnalités non-entières\n\nSéries \"classiques\" la saisonnalité est entière ($s=12,4,...$) mais comment faire pour modéliser les séries journalières ?\nPrendre $s=365$ mais quid des années bissextiles ?\nUtiliser $s=365,25$ mais alors que signifie $1-B^s$ ?\n\n. . .\n\nSolution : prise en compte de saisonnalité non entières par développement de Taylor de $x^\\alpha$ autour de 1:\n$$\nx^\\alpha\\simeq 1+\\alpha(x-1)\\simeq 1-\\alpha+\\alpha x\n$$\nIl vient :\n$$\nB^{365,25}=B^{365}B^{0,25}=(1-\\alpha)B^{365} + \\alpha B^{365+1}\n$$\n\n### Airline fractionnaire\n\nExtension du modèle $ARIMA(0,1,1)(0,1,1)[s]$ avec les notation précédentes et éventuellement plusieurs saisonnalités.\n\nDécomposition faite avec une approche similaire à SEATS `rjd3highfreq::fractionalAirlineDecomposition()` et `rjd3highfreq::multiAirlineDecomposition()`.\n\nPré-ajustement important : peut être fait avec `rjd3highfreq::fractionalAirlineEstimation()`.\nAutre outlier qui est fréquent :\n$$\nWO_t^{t_0} =\\begin{cases}\n1&\\text{si }t=t_0\\\\\n-1&\\text{si }t=t_0+1\\\\\n0&\\text{sinon }\n\\end{cases}\n$$\n\nPour des exemples <https://github.com/palatej/test_rjd3hf> (mais code non à jour).\n\nMême idée pour X-11 (`rjd3x11plus::x11plus()`) mais comment choisir les longueurs des filtres ?\n\n\n\n### Bibliographie {.allowframebreaks}\n\n\n\n\\begin{thebibliography}{999}\n\\bibitem[Eurostat (2015)]{E2015} Eurostat (2015), The ESS guidelines for seasonal adjustment, Eurostat manuals and guidelines, Product Code: KS-GQ-15-001. \\url{http://ec.europa.eu/eurostat/web/products-manuals-and-guidelines/-/KS-GQ-15-001}.\n\\bibitem[Ladiray et al (2018)]{K2018} Ladiray D., Mazzi G.L, Palate J. et Proietti T. (2018), Seasonal Adjustment of Daily and Weekly Data, in Handbook on Seasonal Adjustment, edited by G. L. Mazzi, co-edited by D. Ladiray, European Union, Luxembourg. \\url{ec.europa.eu/eurostat/web/products-manuals-and-guidelines/-/KS-GQ-18-001}.\n\\bibitem[Webel et Smyk (2023)]{websmyk}\nWebel et Smyk (2023), Towards seasonal adjustment of infra-monthly time series with JDemetra+. Deutsche Bundesbank Discussion Paper No. 24/2023. \\url{https://www.bundesbank.de/resource/blob/915460/e0c29d7a79c28c3b48cdc0b07f1e3a64/mL/2023-09-04-dkp-24-data.pdf}\n\\bibitem[Ollech (2018)]{Olleck}\nOllech D. (2018), Seasonal Adjustment of Daily Time Series. Deutsche Bundesbank Discussion Paper No. 41/2018. \\url{http://dx.doi.org/10.2139/ssrn.3273755}\n\\bibitem[Dokumentov et Hyndman (2021)]{K2018} Dokumentov A, Hyndman R. (2021) STR: Seasonal-Trend Decomposition Using Regression. INFORMS Journal on Data Science 1(1):50-62. \\url{https://doi.org/10.1287/ijds.2021.0004}\n\\bibitem[Bandara et Hyndman (2021)]{bandara2021mstl} Bandara K, Hyndman R et Bergmeir C. (2021) MSTL: A Seasonal-Trend Decomposition Algorithm for Time Series with Multiple Seasonal Patterns. \\url{https://doi.org/10.48550/arXiv.2107.13462}\n\\end{thebibliography}\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}